import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

	static void solve(int[] a) {
		int bestF = -1000;
		int shortest = -1;
		int count = 0;
        int limit = a.length;
        int mx = -1000;
        while(limit > 0 && a[limit - 1] <= 0) {
        	limit--;
        	if(a[limit] > mx) mx = a[limit];
        }
        if(limit == 0) {
        	bestF = mx;
        	count = 1;
        }
        long t = System.currentTimeMillis();
		for (int b = 0; b < limit; b++) {
			long dt = System.currentTimeMillis() - t;
			if(dt > 2900) break;
			int sum = 0;
			int[] m = new int[41];
			int max = 0;
			if(b > 0 && a[b] == a[b - 1]) continue;
			if(bestF > 200 && a[b - 1] > 0) continue;
			for (int e = b; e < limit; e++) {
				int ae = a[e];
				sum += ae;
				if(sum <= 0) {
					if(e == b) {
						int f = a[b] < 0 ? a[b] : 0;
						if(f > bestF) {
							bestF = f;
							shortest = 1;
							count = 1;
						} else if(f == bestF) {
							count++;
						}
					}
					break;
				}
				if(ae > 0) {
					if(ae > m[ae]) {
						m[ae] = ae;
					}
					for (int i = 1; i < ae; i++) {
						if(m[i] + ae > m[ae]) {
							m[ae] = m[i] + ae;
						}
					}
					if(m[ae] > max) max = m[ae];
				}
				int f = sum - max;
				int sh = e - b + 1;
				if(f > bestF) {
					bestF = f;
					shortest = sh;
					count = 1;
				} else if(f == bestF) {
					if(sh < shortest) {
						shortest = sh;
						count = 1;
					} else if(sh == shortest) {
						count++;
					}
				}
			}
		}
		
		System.out.println(bestF + " " + count);
	}

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        solve(a);
        // your code goes here
    }
}